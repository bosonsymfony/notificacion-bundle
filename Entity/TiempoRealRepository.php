<?php

namespace UCI\Boson\NotificacionBundle\Entity;
use UCI\Boson\NotificacionBundle\Form\Model\SendNotTiempoReal;

/**
 * MensajeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TiempoRealRepository extends \Doctrine\ORM\EntityRepository
{
    public function persistNotification(TiempoReal $entity){
        try
        {$this->_em->persist($entity);
        $this->_em->flush($entity);
        return  $entity->getId();
        }
        catch(\Exception $ex){
            return $ex->getMessage();
        }
    }

    /**
     * Persiste un conjunto de notificaciones dada la información que se obtiene del formulario
     *
     * @param SendNotTiempoReal $object
     * @return array Retorna el listado de usuarios a los que se le registró una notificación.
     */
    public function persistFormNotification(SendNotTiempoReal $object){
        try
        {
            $notified_users = array();
            $users = $object->getUsers();
            $roles = $object->getRoles();
            foreach ($users as $user) {
                $entity = $this->createEntity($object->getTitulo(),$object->getContenido(),$object->getAutor(),$user);
                $this->persistNotification($entity);
                $notified_users[] = $user->getUsername();
            }
            foreach ($roles as $role) {
                $usersByRole = $role->getUsuarios();
                foreach ($usersByRole as $item) {
                    if(!in_array($item->getUsername(),$notified_users)){
                        $entity = $this->createEntity($object->getTitulo(),$object->getContenido(),$object->getAutor(),$item);
                        $this->persistNotification($entity);
                        $notified_users[] = $item->getUsername();
                    }
                }
            }
            return $notified_users;
        }
        catch(\Exception $ex){
            return $ex->getMessage();
        }
    }

    /**
     * Devuelve una entidad con los usuarios especificados
     *
     * @param $titulo
     * @param $contenido
     * @param $user
     * @return TiempoReal
     */
    private function createEntity($titulo,$contenido,$autor,$user){
        $entity = new TiempoReal();
        $entity->setEstado(false);
        $tipo =$this->_em->getRepository('NotificacionBundle:TipoNotificacion')->findOneByNombre('Tiempo Real');
        $entity->setTitulo($titulo);
        $entity->setTipo($tipo);
        $entity->setContenido($contenido);
        $entity->setAutor($autor);
        $entity->setUser($user);
        $entity->setFecha(new \DateTime());
        return $entity;
    }

}
